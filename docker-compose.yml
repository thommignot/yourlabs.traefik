version: '3.3'

networks:
  web:
    external: true

services:
  traefik:
    image: traefik:v2.2
    container_name: traefik
    restart: unless-stopped
    networks:
    - web
    command:
    - --entrypoints.web.address=:80
    - --providers.docker
    - --api
{% if url.startswith('https') %}
    - --entrypoints.websecure.address=:443
    - --certificatesresolvers.leresolver.acme.caserver={{ acme }}
    - --certificatesresolvers.leresolver.acme.email={{ email }}
    - --certificatesresolvers.leresolver.acme.storage=/etc/traefik/acme/acme.json
    - --certificatesresolvers.leresolver.acme.tlschallenge=true
{% endif %}
    ports:
    - '{% if ip|default(False) %}{{ ip }}:{% endif %}80:80'
    - '{% if ip|default(False) %}{{ ip }}:{% endif %}443:443'
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock:ro
    - /etc/traefik/acme/:/etc/traefik/acme/
    - /etc/traefik/htpasswd:/htpasswd:ro
    labels:
{% if http_redirect %}
    # global redirect to https
    - traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)
    - traefik.http.routers.http-catchall.entrypoints=web
    - traefik.http.routers.http-catchall.middlewares=redirect-to-https
    # middleware redirect
    - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
{% endif %}
    # Dashboard
    - traefik.http.routers.traefik.rule=Host(`{{ url.split("/")[2] }}`)
    - traefik.http.routers.traefik.service=api@internal
{% if url.startswith('https') %}
    - traefik.http.routers.traefik.tls.certresolver=leresolver
    - traefik.http.routers.traefik.entrypoints=websecure
{% else %}
    - traefik.http.routers.traefik.entrypoints=web
{% endif %}
{% if password != 'none' %}
    - traefik.http.routers.traefik.middlewares=authtraefik
    - traefik.http.middlewares.authtraefik.basicauth.usersFile=/htpasswd/root
{% endif %}
